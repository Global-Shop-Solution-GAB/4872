Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sPart.Declare(String," ")
	V.Global.sRev.Declare(String," ")
	V.Global.sLoc.Declare(String," ")
	V.Global.sGSSPart.Declare(String," ")
	V.Global.sOrderNo.Declare
	V.Global.sOrderLine.Declare
	V.Global.sMessage.Declare
	V.Global.iRunQty.Declare
	
	V.Global.sTerms.Declare
	V.Global.bTerms.Declare
	V.Global.bOrderQty.Declare
	V.Global.bProfit.Declare
	V.Global.bGenWO.Declare
	V.Global.bCalcShip.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iStop.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	
	F.Intrinsic.Control.CallSub(GetOptions)
	
	F.Intrinsic.Control.SelectCase(V.Caller.Hook)
		F.Intrinsic.Control.CaseAny(11870,10920)
			'Check Terms (warn if not NET 30)
			F.Intrinsic.Control.If(V.Global.bTerms)
				F.Intrinsic.Control.If(V.Passed.000029,<>,V.Global.sTerms)
					F.Intrinsic.String.Build("Terms are not set to {0}.",V.Global.sTerms,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"WARNING")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny(12230,10531,12400)
			'Pre-Save Hook
			F.Intrinsic.Control.If(V.Caller.Hook,=,12400,AND,V.Passed.000052,=,"")
				F.Intrinsic.Control.End
			F.Intrinsic.Control.EndIf
			
			'Set Variables
			V.Global.sPart.Set(V.Passed.000052)
			V.Global.sRev.Set(V.Passed.000053)
			V.Global.sLoc.Set(V.Passed.000054)
			V.Global.iRunQty.Set(V.Passed.000007)
			F.Intrinsic.String.GSSPartString(V.Global.sPart,V.Global.sRev,V.Global.sGSSPart)
			F.Intrinsic.String.LPad(V.Passed.000060,"0",7,V.Global.sOrderNo)
			F.Intrinsic.String.LPad(V.Passed.000051,"0",3,V.Global.sOrderLine)
			
			'Check Part missing
			F.Intrinsic.Control.If(V.Passed.000052,=,"")
				V.Global.sMessage.Set("Part Missing. Please enter.")
				V.Local.iStop.Set(1)
			F.Intrinsic.Control.EndIf
			
			'Check Order Qty is greater than order greater than the Inv Order Qty
			F.Intrinsic.Control.If(V.Global.bOrderQty)
'				F.Intrinsic.Control.If(V.Passed.000007,=,".0000")
'					V.Local.iStop.Set(1)
'					F.Intrinsic.Control.If(V.Global.sMessage,=,"")
'						V.Global.sMessage.Set("Order Qty Missing. Please enter.")
'					F.Intrinsic.Control.Else
'						F.Intrinsic.String.Build("{0}{1}Order Qty Missing. Please enter.",V.Global.sMessage,V.Ambient.NewLine,V.Global.sMessage)
'					F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.CallSub(CheckOrderQty2)
			F.Intrinsic.Control.EndIf
			
			'Check that Price > Cost (warn if not)
			F.Intrinsic.Control.If(V.Global.bProfit)
				F.Intrinsic.Control.If(V.Passed.000127,<=,V.Passed.000012)
					F.Intrinsic.Control.If(V.Global.sMessage,=,"")
						V.Global.sMessage.Set("Price is less than or equal to the cost.")
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("{0}{1}Price is less than or equal to the cost.",V.Global.sMessage,V.Ambient.NewLine,V.Global.sMessage)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'Present message for checks above and stop process if needed
			F.Intrinsic.Control.If(V.Global.sMessage,<>,"")
				F.Intrinsic.UI.Msgbox(V.Global.sMessage,"WARNING")
				F.Intrinsic.Control.If(V.Local.iStop,=,1)
					V.Passed.777777.Set(1)
					F.Intrinsic.Control.End
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'Check Order Qty vs NET
			F.Intrinsic.Control.If(V.Caller.Hook,=,12230)
				'If Order Qty <= NET allow the save to happen without a generated WO, then stop save process and prompt a message that a WO must be generated
				F.Intrinsic.Control.If(V.Global.bGenWO)
					F.Intrinsic.Control.CallSub(CheckOrderQty)
					F.Intrinsic.Control.If(V.Args.WO,=,False)
						F.Intrinsic.UI.Msgbox("The Order Qty is greater than the NET and no Work Order has been generated. Please generate a Work Order before saving.","Work Order Validation")
						V.Passed.777777.Set(1)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
				
			'You have not ran Calc Ship Date - Please run before saving
			F.Intrinsic.Control.If(V.Global.bCalcShip)
				F.ODBC.Connection!con.OpenCompanyConnection
				F.Intrinsic.Control.CallSub(CheckTable)
				F.Intrinsic.String.Build("Select * From GAB_4872_ORD_TRACK Where Order_No = '{0}' And Order_Line = '{1}';",V.Global.sOrderNo,V.Global.sOrderLine,V.Local.sSQL)
				F.Data.DataTable.CreateFromSQL("dtCalcCheck","con",V.Local.sSQL,True)
				F.Intrinsic.Control.If(V.DataTable.dtCalcCheck.RowCount,=,0)
					F.Intrinsic.UI.Msgbox("You have not ran Calc Ship Date - Please run before saving.","Calc Ship Date Check")
					V.Passed.777777.Set(1)
				F.Intrinsic.Control.EndIf
				F.ODBC.Connection!con.Close
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case(12340)
			'Gen WO Hook - Do Nothing Currently
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.CheckTable.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.bExists.Declare
	
	F.ODBC.Connection!con.TableExists("GAB_4872_ORD_TRACK",V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists,=,False)
		F.ODBC.Connection!con.Execute("CREATE TABLE GAB_4872_ORD_TRACK(TID IDENTITY,ORDER_NO CHAR(7),ORDER_LINE CHAR(4),GSS_USER CHAR(8),DATE_RUN DATETIME,DATE_POSTED DATE,DATE_CURRENT DATE,UNIQUE(TID));")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.CheckOrderQty.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sMSg.Declare
	
	F.ODBC.Connection!con.OpenCompanyConnection
	
	'If Order Qty <= NET, then stop process and prompt message that NET is greater and no WO is needed for this order
	F.Intrinsic.String.Build("Select Part,Location,Qty_OnHand,Qty_OnOrder_PO,Qty_OnOrder_WO,Qty_Required,(Qty_OnHand+Qty_OnOrder_PO+Qty_OnOrder_WO)-Qty_Required As NET From Inventory_Mstr Where Part = '{0}' And Location = '{1}';",V.Global.sGSSPart,V.Global.sLoc,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtInvMstr","con",V.Local.sSQL,True)
	F.Intrinsic.Control.If(V.Global.iRunQty,<=,V.DataTable.dtInvMstr(0).NET!FieldVal)
		F.Intrinsic.Variable.AddRV("WO",True)
		F.Data.DataTable.Close("dtInvMstr")
		F.ODBC.Connection!con.Close
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		'Check if WO Exists for Order Line
		F.Intrinsic.String.Build("Select * From V_Order_To_WO Where Order_No = '{0}' And Order_Line = '{1}0';",V.Global.sOrderNo,V.Global.sOrderLine,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtSOWO","con",V.Local.sSQL,True)
		F.Intrinsic.Control.If(V.DataTable.dtSOWO.RowCount,=,0)
			F.Intrinsic.Variable.AddRV("WO",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Variable.AddRV("WO",True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.Close("dtSOWO")
	F.Data.DataTable.Close("dtInvMstr")
	F.ODBC.Connection!con.Close
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckOrderQty.End

Program.Sub.CheckOrderQty2.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.fQtyOrder.Declare
	
	F.ODBC.Connection!con.OpenCompanyConnection
	
	F.Intrinsic.String.Build("Select * From Order_Booking Where Order_No = '{0}' And Order_Line = '{1}';",V.Global.sOrderNo,V.Global.sOrderLine,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtBooking","con",V.Local.sSQL,True)
	F.Intrinsic.Control.If(V.DataTable.dtBooking.RowCount,=,0)
		F.Intrinsic.String.Build("Select Qty_Order From Inventory_Mstr Where Part = '{0}' And Location = '{1}';",V.Global.sGSSPart,V.Global.sLoc,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.fQtyOrder)
		F.Intrinsic.Control.If(V.Global.iRunQty,<,V.Local.fQtyOrder)
			V.Passed.000007.Set(V.Local.fQtyOrder)
			V.Global.iRunQty.Set(V.Local.fQtyOrder)
			F.Intrinsic.Control.If(V.Global.sMessage,=,"")
				F.Intrinsic.String.Build("Order Qty Validation:{0}The minimum order quantity for {1} is {2}. Order Qty will be updated.",V.Ambient.NewLine,V.Global.sGSSPart.Trim,V.Local.fQtyOrder,V.Global.sMessage)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}{1}{1}Order Qty Validation:{1}The minimum order quantity for {2} is {3}. Order Qty will be updated.",V.Global.sMessage,V.Ambient.NewLine,V.Global.sGSSPart.Trim,V.Local.fQtyOrder,V.Global.sMessage)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.Close("dtBooking")
	
	F.ODBC.Connection!con.Close
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckOrderQty2.End

Program.Sub.GetOptions.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sRet.Declare
	V.Local.bRet.Declare
	
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5000,5,"",V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,"")
		V.Global.sTerms.Set("NET 30")
		V.Global.bTerms.Set(True)
		V.Global.bOrderQty.Set(True)
		V.Global.bProfit.Set(True)
		V.Global.bGenWO.Set(True)
		V.Global.bCalcShip.Set(True)
	F.Intrinsic.Control.Else
		'Terms
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5000,0,"",V.Global.bTerms)
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5000,5,"",V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,=,"Validate Terms (Double click to set Terms)")
			V.Global.sTerms.Set("NET 30")
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Split(V.Local.sRet,"-",V.Local.sRet)
			F.Intrinsic.String.Replace(V.Local.sRet(1)," (","",V.Local.sRet)
			F.Intrinsic.String.Replace(V.Local.sRet,") ","",V.Global.sTerms)
		F.Intrinsic.Control.EndIf
		'Order Qty
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5100,0,"",V.Global.bOrderQty)
		'Price > Cost
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5200,0,"",V.Global.bProfit)
		'Gen WO
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5300,0,"",V.Global.bGenWO)
		'Calc Ship Date
		F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"4872",4872,5600,0,"",V.Global.bCalcShip)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GetOptions.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$avaldez$}$20190401145931359$}$CBUu04veoT9NExad5Mkb3ylWEN0INN4AyfOkGO2bWwmyAzGJT3rifk17PpdiKTWOfi0cxiuxBMU=
Program.Sub.Comments.End